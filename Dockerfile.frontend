# Build stage
FROM ubuntu:22.04 as builder

# Install necessary dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    openjdk-8-jdk \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user
RUN useradd -m flutter
RUN mkdir -p /home/flutter/app
RUN chown -R flutter:flutter /home/flutter

# Switch to non-root user
USER flutter
WORKDIR /home/flutter/app

# Install Flutter
RUN git clone https://github.com/flutter/flutter.git /home/flutter/flutter
ENV PATH="/home/flutter/flutter/bin:${PATH}"
RUN flutter channel stable
RUN flutter upgrade
RUN flutter config --enable-web
RUN flutter doctor

# Copy pubspec.yaml first to leverage Docker cache
COPY --chown=flutter:flutter pubspec.yaml .
RUN flutter pub get

# Copy the rest of the application
COPY --chown=flutter:flutter . .

# Build the web application
RUN flutter build web --release

# Serve stage
FROM nginx:alpine

# Copy the built web application
COPY --from=builder /home/flutter/app/build/web /usr/share/nginx/html

# Create and copy nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 8080;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files \$uri \$uri/ /index.html;
    }

    # Handle API requests
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

# Expose port 8080
EXPOSE 8080

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 